<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GwApiNET</name>
    </assembly>
    <members>
        <member name="T:GwApiNET.IApiRequest">
            <summary>
            Represents a resource request and builds the appropriate url for use with the <seealso cref="T:GwApiNET.INetworkHandler"/> 
            </summary>
        </member>
        <member name="M:GwApiNET.IApiRequest.AddParameter(System.String,System.Object)">
            <summary>
            Add a parameter.
            </summary>
            <param name="name">name of parameter</param>
            <param name="value">value of parameter</param>
        </member>
        <member name="P:GwApiNET.IApiRequest.Parameters">
            <summary>
            Parameter List
            key = parameter name
            object = parameter value
            </summary>
        </member>
        <member name="P:GwApiNET.IApiRequest.Resource">
            <summary>
            Resource url (not including the base url)
            </summary>
        </member>
        <member name="M:GwApiNET.ApiRequest.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:GwApiNET.IApiRequestHandlerAsync`1">
            <summary>
            Interface definition to handle api requests.
            </summary>
            <typeparam name="T">Expected object that will be parsed</typeparam>
        </member>
        <member name="T:GwApiNET.IApiRequestHandler`1">
            <summary>
            Interface definition to handle api requests.
            </summary>
            <typeparam name="T">Expected object that will be parsed</typeparam>
        </member>
        <member name="M:GwApiNET.ApiRequestHandler`1.#ctor(GwApiNET.IApiResponseParser{`0},GwApiNET.INetworkHandler,System.Boolean)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ApiRequestHandler`1.#ctor(GwApiNET.IApiResponseParserAsync{`0},GwApiNET.INetworkHandler,System.Boolean)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ApiRequestHandler`1.#ctor(GwApiNET.IApiResponseParserAsync{`0},GwApiNET.IApiResponseParser{`0},GwApiNET.INetworkHandler,System.Boolean)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.DescriptionAttribute.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseCollectionAttribute.CollectionType.IDictionary">
            <summary>
            Designates an IDictionary Collection
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseCollectionAttribute.CollectionType.IList">
            <summary>
            Designates an IList Collection
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseCollectionAttribute.CollectionType.IEnumerable">
            <summary>
            Designates an IEnumerable.
            This should be used if no other enum values matches
            </summary>
        </member>
        <member name="M:GwApiNET.CacheStrategy.AgeCacheStrategy.#ctor">
            <summary>
            Constructor with 30 second maximum age.
            </summary>
        </member>
        <member name="M:GwApiNET.CacheStrategy.AgeCacheStrategy.#ctor(System.TimeSpan)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.CacheStrategy.BuildVersionCacheStrategy.#ctor(GwApiNET.CacheStrategy.BuildVersionCacheStrategy.BuildVersionCondition)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.CacheStrategy.CollectionCacheStrategy`2.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.CacheStrategy.DayOfWeekStrategy.#ctor(System.DayOfWeek)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.CacheStrategy.DictionaryCacheStrategy`3.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.CacheStrategy.NullCacheStrategy.#ctor(System.Boolean)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:GwApiNET.Gw2PositionReader.Player">
            <summary>
            Object containing player data and methods for retrieving that data.
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2PositionReader.Player.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2PositionReader.Player.Start">
            <summary>
            Start updating PlayerData from memory-mapped file.
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2PositionReader.Player.Stop">
            <summary>
            Stop updating PlayerData from memory-mapped file.
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2PositionReader.Player.OpenMumbleLink">
            <summary>
            Opens the memory-mapped file.
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2PositionReader.Player.OpenBinary(System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:GwApiNET.Gw2PositionReader.Player.RefreshIdentity">
            <summary>
            Reads Identity and converts JSON string.
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2PositionReader.Player.GetServerAddress(System.Byte[])">
            <summary>
            Helper method to convert byte array into IPEndpoint.
            </summary>
            <param name="serverAddressBytes"></param>
            <returns></returns>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.Version">
            <summary>
            Link Version
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.Tick">
            <summary>
            Tick Value
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.AvatarPosition">
            <summary>
            Position of the avatar in meters. Uses left handed coordinate system.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.AvatarFront">
            <summary>
            Unit vector pointing out of the avatar's eyes in meters. Uses left handed 
            coordinate system.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.AvatarTop">
            <summary>
            Unit vector pointing out of the top of the avatar's head in meters. Uses 
            left handed coordinate system.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.LinkName">
            <summary>
            Link Name
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.CameraPosition">
            <summary>
            Position of the camera in meters. Uses left handed coordinate system.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.CameraFront">
            <summary>
            Unit vector pointing out of the front of the camera in meters. Uses
            left handed coordinate system.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.CameraTop">
            <summary>
            Unit vector pointing out of the top of the camera in meters. Uses 
            left handed coordinate system.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.CharacterName">
            <summary>
            Returns character name of player.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.Profession">
            <summary>
            Returns profession. Ex: 1 = Guardian.  Will change to Enumeration.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.TeamColor">
            <summary>
            Team Color ID.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.IsCommander">
            <summary>
            Returns true if commander is enabled for player character.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.ServerAddress">
            <summary>
            Returns the IPEndPoint of the server. Includes IP address and port.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.MapId">
            <summary>
            Returns the Map ID of the current map.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.MapType">
            <summary>
            Returns the Map Type of the current map.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.WorldId">
            <summary>
            Returns the current World/Shard ID, ex. 1006 = Sorrow's Furnace.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.Instance">
            <summary>
            Returns the current map instance.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.Build">
            <summary>
            Returns the current client build number.
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.Description">
            <summary>
            Link Description
            </summary>
        </member>
        <member name="P:GwApiNET.Gw2PositionReader.Player.IdentityCacheMaxAge">
            <summary>
            Gets or Sets the max age, in seconds, of the Mumble Link Identity field cache strategy.  Properties
            from the Identity field are: <see cref="P:GwApiNET.Gw2PositionReader.Player.CharacterName"/>, <see cref="P:GwApiNET.Gw2PositionReader.Player.Profession"/>, 
            <see cref="P:GwApiNET.Gw2PositionReader.Player.TeamColor"/>, and <see cref="P:GwApiNET.Gw2PositionReader.Player.IsCommander"/>.
            </summary>
        </member>
        <member name="T:GwApiNET.Gw2PositionReader.Player.LinkedMem">
            <summary>
            Basic mumble link positional audio structure.
            </summary>
        </member>
        <member name="T:GwApiNET.Gw2PositionReader.Player.Identity">
            <summary>
            GW2 uses this to store player identity info. According to 
            mumble.sourceforge.net/link, the identity should contain data that
            uniquely identifies the player in the given context.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ResponseObject">
            <summary>
            Represents the base class for all responses from the GW2 API
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ResponseObject.Url">
            <summary>
            Url used to retrieve the object from the GW2 api
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ResponseObject.LastUpdateBuild">
            <summary>
            The build of GW2 when this object was last retrieved/updated
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ResponseObject.LastUpdated">
            <summary>
            The DateTime when the object was retrieved/updated
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ResponseObject.Age">
            <summary>
            Amount of time since the object was retrieved
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ResponseObject.CacheStrategy">
            <summary>
            Caching strategy used by the ResourceCache to determine if the object has expired.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ResponseObject.FromCache">
            <summary>
            Identifies weather this object is from cache (true) or from the GW2 servers (false)
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ResponseObject.Expired">
            <summary>
            Identifies weather the response object has expired
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ResponseObject.RawResponse">
            <summary>
            original response value from GW2 API
            </summary>
        </member>
        <member name="T:GwApiNET.GwApiException">
            <summary>
            Provides Exceptions for internal API.
            May be used to wrap other exceptions to provide specific problems with possible resolutions.
            </summary>
        </member>
        <member name="M:GwApiNET.GwApiException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error Message</param>
            <param name="innerException">inner exception</param>
        </member>
        <member name="M:GwApiNET.GwApiException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error Message</param>
            <param name="suggestion">Possible resolution to exception</param>
            <param name="innerException">inner exception</param>
        </member>
        <member name="M:GwApiNET.GwApiException.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error Message</param>
            <param name="responseError">GW2 error resposne </param>
        </member>
        <member name="P:GwApiNET.GwApiException.Suggestion">
            <summary>
            Possible resolution to exception
            </summary>
        </member>
        <member name="P:GwApiNET.GwApiException.ResponseError">
            <summary>
            Response Error from GW2
            </summary>
        </member>
        <member name="M:GwApiNET.IResponseCache.Add(System.String,GwApiNET.ResponseObjects.ResponseObject)">
            <summary>
            Add an object to the response cache
            </summary>
            <param name="url">full url used to obtain the response</param>
            <param name="response">the response to cache</param>
        </member>
        <member name="M:GwApiNET.IResponseCache.Add(GwApiNET.ResponseObjects.ResponseObject)">
            <summary>
            Add an object to the response cache
            </summary>
            <param name="response">the response to cache</param>
        </member>
        <member name="M:GwApiNET.IResponseCache.Get(System.String,System.Boolean)">
            <summary>
            Retrieve a ResponseObject object from cache.
            </summary>
            <param name="url">full url that would be used to retrieve the response from the GW2 API</param>
            <param name="ignore">ignore any values.  This will force a return of null.</param>
            <returns>null is returned if no object is found, <paramref name="ignore"/> = true, or the object has expired; otherwise the requested response object for the given url will be returned.</returns>
        </member>
        <member name="M:GwApiNET.IResponseCache.Clear">
            <summary>
            Clears the cache
            </summary>
        </member>
        <member name="M:GwApiNET.IResponseCache.Purge">
            <summary>
            Purge the cache of all expired objects.
            </summary>
        </member>
        <member name="M:GwApiNET.IResponseCache.Remove(System.String)">
            <summary>
            Remove object from cache with given url
            </summary>
            <param name="url">url or key to object</param>
        </member>
        <member name="M:GwApiNET.IResponseCache.Save">
            <summary>
            Saves the cache using the default cache file <seealso cref="F:GwApiNET.Constants.CacheFile"/>
            </summary>
        </member>
        <member name="M:GwApiNET.IResponseCache.Save(System.String)">
            <summary>
            Saves the cache file to the given filename.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:GwApiNET.IResponseCache.Load(System.String)">
            <summary>
            Load a cache from the given file.
            if null is provided, then the <seealso cref="F:GwApiNET.Constants.CacheFile"/> will attempt to be loaded.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:GwApiNET.IResponseCacheAsync.AddAsync(System.String,GwApiNET.ResponseObjects.ResponseObject)">
            <summary>
            Add an object to the response cache
            </summary>
            <param name="url">full url used to obtain the response</param>
            <param name="response">the response to cache</param>
        </member>
        <member name="M:GwApiNET.IResponseCacheAsync.AddAsync(GwApiNET.ResponseObjects.ResponseObject)">
            <summary>
            Add an object to the response cache
            </summary>
            <param name="response">the response to cache</param>
        </member>
        <member name="M:GwApiNET.IResponseCacheAsync.GetAsync(System.String,System.Boolean)">
            <summary>
            Retrieve a ResponseObject object from cache.
            </summary>
            <param name="url">full url that would be used to retrieve the response from the GW2 API</param>
            <param name="ignore">ignore any values.  This will force a return of null.</param>
            <returns>null is returned if no object is found, <paramref name="ignore"/> = true, or the object has expired; otherwise the requested response object for the given url will be returned.</returns>
        </member>
        <member name="M:GwApiNET.IResponseCacheAsync.PurgeAsync">
            <summary>
            Purge the cache of all expired objects.
            </summary>
        </member>
        <member name="M:GwApiNET.IResponseCacheAsync.RemoveAsync(System.String)">
            <summary>
            Remove object from cache with given url
            </summary>
            <param name="url">url or key to object</param>
        </member>
        <member name="M:GwApiNET.IResponseCacheAsync.SaveAsync">
            <summary>
            Saves the cache using the default cache file <seealso cref="F:GwApiNET.Constants.CacheFile"/>
            </summary>
        </member>
        <member name="M:GwApiNET.IResponseCacheAsync.SaveAsync(System.String)">
            <summary>
            Saves the cache file to the given filename.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:GwApiNET.IResponseCacheAsync.LoadAsync(System.String)">
            <summary>
            Load a cache from the given file.
            if null is provided, then the <seealso cref="F:GwApiNET.Constants.CacheFile"/> will attempt to be loaded.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:GwApiNET.Logging.GwLogManager.SetLogLevel(Slf.ILogger,System.Boolean,GwApiNET.Logging.GwLogManager.LogLevel)">
            <summary>
            Enable/Disable the specified log level for the specified logger.
            </summary>
            <param name="logger">logger to enable/disable</param>
            <param name="enabled">true: enable all; false: disable all</param>
            <param name="level">log level to enable/disable</param>
        </member>
        <member name="M:GwApiNET.Logging.GwLogManager.SetLogLevel(System.String,System.Boolean,GwApiNET.Logging.GwLogManager.LogLevel)">
            <summary>
            Enable/Disable the specified log level for the specified logger.
            </summary>
            <param name="loggerName">logger to enable/disable</param>
            <param name="enabled">true: enable all; false: disable all</param>
            <param name="level">log level to enable/disable</param>
        </member>
        <member name="M:GwApiNET.Logging.GwLogManager.SetLogLevel(System.String,System.Boolean)">
            <summary>
            Enable/Disable the specified logger.
            </summary>
            <param name="loggerName">logger to enable/disable</param>
            <param name="enabled">true: enable all; false: disable all</param>
        </member>
        <member name="M:GwApiNET.Logging.GwLogManager.SetLogLevel(System.Boolean,GwApiNET.Logging.GwLogManager.LogLevel)">
            <summary>
            Enable/Disable the specified log level for all loggers.
            </summary>
            <param name="enable">true: enable all; false: disable all</param>
            <param name="level">log level to enable/disable</param>
        </member>
        <member name="M:GwApiNET.Logging.GwLogManager.SetLogLevel(System.Boolean)">
            <summary>
            Enable/Disable all loggers at all log levels
            </summary>
            <param name="enable">true: enable all; false: disable all</param>
        </member>
        <member name="T:GwApiNET.Logging.GwLogManager.LogLevel">
            <summary>
             Defines available log levels (or logging "categories").
             Log levels can be used to organize and filter your
             logging output.
            </summary>
        </member>
        <member name="F:GwApiNET.Logging.GwLogManager.LogLevel.Undefined">
            <summary>
            The logging level is undefined. This is regarded
            an invalid value.
            </summary>
        </member>
        <member name="F:GwApiNET.Logging.GwLogManager.LogLevel.Debug">
            <summary>
            Logs debugging output.
            </summary>
        </member>
        <member name="F:GwApiNET.Logging.GwLogManager.LogLevel.Info">
            <summary>
            Logs basic information.
            </summary>
        </member>
        <member name="F:GwApiNET.Logging.GwLogManager.LogLevel.Warn">
            <summary>
            Logs a warning.
            </summary>
        </member>
        <member name="F:GwApiNET.Logging.GwLogManager.LogLevel.Error">
            <summary>
            Logs an error.
            </summary>
        </member>
        <member name="F:GwApiNET.Logging.GwLogManager.LogLevel.Fatal">
            <summary>
            Logs a fatal incident.
            </summary>
        </member>
        <member name="T:GwApiNET.StructExtensions">
            <summary>
            Extensions for structs
            </summary>
        </member>
        <member name="M:GwApiNET.StructExtensions.ToByteArray``1(``0)">
            <summary>
            Convert a struct to a byte[]
            <remarks>Inverse of <see cref="M:GwApiNET.StructExtensions.ToStruct``1(System.Byte[])"/>
            Structures should be decorated with the [StructLayout(LayoutKind.Sequential)] or [StructLayout(LayoutKind.Explicit)] attribute</remarks>
            </summary>
            <typeparam name="T">struct type implicitly determined</typeparam>
            <param name="obj">struct to convert</param>
            <returns>byte[], <seealso cref="M:GwApiNET.StructExtensions.ToStruct``1(System.Byte[])"/></returns>
        </member>
        <member name="M:GwApiNET.StructExtensions.ToByteArray``1(``0[])">
            <summary>
            Convert a struct array to a byte[]
            <remarks>Inverse of <see cref="M:GwApiNET.StructExtensions.ToStructArray``1(System.Byte[])"/>
            Structures should be decorated with the [StructLayout(LayoutKind.Sequential)] or [StructLayout(LayoutKind.Explicit)] attribute</remarks>
            </summary>
            <typeparam name="T">struct type implicitly determined</typeparam>
            <param name="obj">struct to convert</param>
            <returns>byte[], <seealso cref="M:GwApiNET.StructExtensions.ToStruct``1(System.Byte[])"/></returns>
        </member>
        <member name="M:GwApiNET.StructExtensions.ToStruct``1(System.Byte[])">
            <summary>
            Convert the byte[] to a struct
            <remarks>Inverse of <see cref="M:GwApiNET.StructExtensions.ToByteArray``1(``0)"/>
            Structures should be decorated with the [StructLayout(LayoutKind.Sequential)] or [StructLayout(LayoutKind.Explicit)] attribute</remarks>
            </summary>
            <typeparam name="T">struct type</typeparam>
            <param name="array">array to convert</param>
            <returns>struct of type T, <seealso cref="M:GwApiNET.StructExtensions.ToByteArray``1(``0)"/></returns>
        </member>
        <member name="M:GwApiNET.StructExtensions.ToStruct``1(System.Byte[],System.Int32)">
            <summary>
            Convert the byte[] to a struct
            <remarks>Inverse of <see cref="M:GwApiNET.StructExtensions.ToByteArray``1(``0)"/>
            Structures should be decorated with the [StructLayout(LayoutKind.Sequential)] or [StructLayout(LayoutKind.Explicit)] attribute</remarks>
            </summary>
            <typeparam name="T">struct type</typeparam>
            <param name="array">array to convert</param>
            <returns>struct of type T, <seealso cref="M:GwApiNET.StructExtensions.ToByteArray``1(``0)"/></returns>
        </member>
        <member name="M:GwApiNET.StructExtensions.ToStructArray``1(System.Byte[])">
            <summary>
            Convert the byte[] to a struct array
            <remarks>Inverse of <see cref="M:GwApiNET.StructExtensions.ToByteArray``1(``0)"/>
            Structures should be decorated with the [StructLayout(LayoutKind.Sequential)] or [StructLayout(LayoutKind.Explicit)] attribute</remarks>
            </summary>
            <typeparam name="T">struct type</typeparam>
            <param name="array">array to convert</param>
            <returns>struct of type T, <seealso cref="M:GwApiNET.StructExtensions.ToByteArray``1(``0)"/></returns>
        </member>
        <member name="T:GwApiNET.Gw2PositionReader.Gw2PositionReaderApi">
            <summary>
            Position information service API.
            Takes advantage of mumble link information to provide real time player information such as the current world, map, and position of the character.
            <remarks>Much of this API requires a character to be logged into GW2 on the same computer running this library.  Mumble link information is obtained via memory from the GW2 client.</remarks>
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2PositionReader.Gw2PositionReaderApi.GetPlayerDataInstance">
            <summary>
            Retrieves the players data.
            <remarks>This requires that the GW2 client to be running and logged into a world on the same computer running this library.</remarks>
            </summary>
            <returns></returns>
        </member>
        <member name="T:GwApiNET.Gw2PositionReader.Vector3">
            <summary>
            3D vector used to store position/location information
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2PositionReader.Vector3.X">
            <summary>
            X-Axis value
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2PositionReader.Vector3.Y">
            <summary>
            Y-Axis value
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2PositionReader.Vector3.Z">
            <summary>
            Z-Axis value
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2PositionReader.Vector3.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Default Constructor
            </summary>
            <param name="X">X-Axis value</param>
            <param name="Y">Y-Axis value</param>
            <param name="Z">Z-Axis value</param>
        </member>
        <member name="M:GwApiNET.Gw2PositionReader.Vector3.op_Multiply(GwApiNET.Gw2PositionReader.Vector3,System.Double)">
            <summary>
            Provides multiplication operator to the point using a scaler.
            </summary>
            <param name="point">value to multiply</param>
            <param name="scaler">scaler to multiply the X and Y value by.</param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.Gw2PositionReader.Vector3.op_Multiply(System.Double,GwApiNET.Gw2PositionReader.Vector3)">
            <summary>
            Provides multiplication operator to the point using a scaler.
            </summary>
            <param name="point">value to multiply</param>
            <param name="scaler">scaler to multiply the X and Y value by.</param>
            <returns></returns>
        </member>
        <member name="T:GwApiNET.ColorItemType">
            <summary>
            Color Item Catagory
            </summary>
        </member>
        <member name="T:GwApiNET.EventState">
            <summary>
            Event States
            </summary>
        </member>
        <member name="T:GwApiNET.GameType">
            <summary>
            Game Types
            </summary>
        </member>
        <member name="T:GwApiNET.ItemType">
            <summary>
            Item Types
            </summary>
        </member>
        <member name="T:GwApiNET.RarityType">
            <summary>
            Item Rarity Types
            </summary>
        </member>
        <member name="T:GwApiNET.Language">
            <summary>
            Response Language Identification
            </summary>
        </member>
        <member name="T:GwApiNET.PointOfInterestType">
            <summary>
            Point of Interest Types
            </summary>
        </member>
        <member name="T:GwApiNET.OwnerColor">
            <summary>
            Owner Colors
            Identifies Teams
            </summary>
        </member>
        <member name="T:GwApiNET.MatchMapType">
            <summary>
            Match Map Types
            </summary>
        </member>
        <member name="T:GwApiNET.DisciplineType">
            <summary>
            Discipline Types
            </summary>
        </member>
        <member name="T:GwApiNET.RecipeType">
            <summary>
            Recipe Types
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Coat">
            <summary>
            a coat recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Leggings">
            <summary>
            a leggings recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Refinement">
            <summary>
            a refinement recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Insignia">
            <summary>
            an insignia recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Bulk">
            <summary>
            a bulk recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Component">
            <summary>
            a component recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Inscription">
            <summary>
            an inscription recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Boots">
            <summary>
            a boots recpie
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.UpgradeComponent">
            <summary>
            an upgrade component recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Gloves">
            <summary>
            a glove recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Helm">
            <summary>
            a helm recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Axe">
            <summary>
            an axe recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Dagger">
            <summary>
            a dagger recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Hammer">
            <summary>
            a hammer recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Greatsword">
            <summary>
            a greatsword recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Mace">
            <summary>
            a mace recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Shield">
            <summary>
            a shield recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Sword">
            <summary>
            a sword recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Harpoon">
            <summary>
            a harpoon recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.LongBow">
            <summary>
            a long bow recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Pistol">
            <summary>
            a pistol recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Rifle">
            <summary>
            a rifle recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.ShortBow">
            <summary>
            a short bow recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Speargun">
            <summary>
            a speargun recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Torch">
            <summary>
            a torch recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Warhorn">
            <summary>
            a warhorn recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Focus">
            <summary>
            a focus recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Potion">
            <summary>
            a potion recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Scepter">
            <summary>
            a scepter recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Staff">
            <summary>
            a staff recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Trident">
            <summary>
            a trident recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Dessert">
            <summary>
            a dessert recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Dye">
            <summary>
            a dye recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Feast">
            <summary>
            a feast recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.IngredientCooking">
            <summary>
            a cooking ingredient recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Meal">
            <summary>
            a meal recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Snack">
            <summary>
            a snack recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Soup">
            <summary>
            a soup recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Seasoning">
            <summary>
            a seasoning recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Amulet">
            <summary>
            an amulet recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Earring">
            <summary>
            an earring recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Ring">
            <summary>
            a ring recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Shoulders">
            <summary>
            a shoulder recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Bag">
            <summary>
            a bag recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Consumable">
            <summary>
            a consumable recipe
            </summary>
        </member>
        <member name="F:GwApiNET.RecipeType.Unknown">
            <summary>
            Unknown Recipe
            </summary>
        </member>
        <member name="T:GwApiNET.Profession">
            <summary>
            Character Profession
            </summary>
        </member>
        <member name="T:GwApiNET.TeamColor">
            <summary>
            PvP Team Color
            </summary>
        </member>
        <member name="T:GwApiNET.ExceptionHelper">
            <summary>
            Exception helper
            </summary>
        </member>
        <member name="M:GwApiNET.ExceptionHelper.ThrowOnNull``1(``0,System.String)">
            <summary>
            Throws exception if given object is null.
            </summary>
            <typeparam name="T">type of object to check</typeparam>
            <param name="obj">object to determine if null</param>
            <param name="objectName">name of object</param>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Gw2StatsMatchEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Gw2StatsObjectives.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Gw2StatsRatingsObject.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Gw2StatsMatchEntryParser">
            <summary>
            Parser for gw2stats.net matches.json
            </summary>
        </member>
        <member name="T:GwApiNET.IApiResponseParser`1">
            <summary>
            Response Parser Interface definition.
            <remarks>Each GW2 API response will likely have it's own IApiResponseParser{T}</remarks>
            </summary>
            <typeparam name="T">Expected output object</typeparam>
        </member>
        <member name="M:GwApiNET.IApiResponseParser`1.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Gw2StatsMatchEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Gw2StatsMatchEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="T:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Gw2StatsObjectivesParser">
            <summary>
            Parser for gw2stats.net status.json
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Gw2StatsObjectivesParser.#ctor(GwApiNET.Gw2Stats.ResponseObjects.Gw2StatsObjectives.ObjectiveType)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Gw2StatsObjectivesParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="P:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Gw2StatsObjectivesParser.Type">
            <summary>
            Expected object type.
            </summary>
        </member>
        <member name="T:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Gw2StatsRatingsObjectParser">
            <summary>
            Gw2Stats.net parser for ratings.json
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Gw2StatsRatingsObjectParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Gw2StatsRatingsObjectParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Gw2StatsStatusCodeParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Ge2StatsStatusEntryParser">
            <summary>
            Parser for gw2stats.net status.json
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Parsers.Ge2StatsStatusEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2Stats.ResponseObjects.Gw2StatsStatusEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2Stats.ResponseObjects.ApiStatus.OK">
            <summary>
            Status
            "No error was received : Completed successfully"
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2Stats.ResponseObjects.ApiStatus.UNREACHABLE">
            <summary>
            Status
            "The host was unreachable : host may be down"
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2Stats.ResponseObjects.ApiStatus.DOWN">
            <summary>
            Status
            "Host was reachable but API returned error : API may be down"
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2Stats.ResponseObjects.ApiStatus.PARTIAL">
            <summary>
            Status
            "Only partial data was received"
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2Stats.ResponseObjects.ApiStatus.INCREASING">
            <summary>
            Status
            "Ping to the API host has increased 100ms from last update"
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2Stats.ResponseObjects.ApiStatus.HIGH_PING">
            <summary>
            Status
            "Ping to the API host has reached a minimum of 750ms"
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2Stats.ResponseObjects.ApiStatus.SLOW_RETRIEVE">
            <summary>
            Status
            "API host and API are up : Data retrieval is over 3 seconds"
            </summary>
        </member>
        <member name="M:GwApiNET.GwApi.GetEvents(System.Int32,System.Int32,System.Nullable{System.Guid},System.Boolean)">
            <summary>
            Obtains an event mapping between world_id, event_id, and map_id
            <remarks>All parameters are optional.  Default values will ommit all parameters and retrieve a complete events list</remarks>
            </summary>
            <param name="world_id">(Optional) provide a value > 0 to include this as a parameter</param>
            <param name="map_id">(Optional) provide a value > 0 to include this as a parameter</param>
            <param name="event_id">(Optional) provide a non-null value to include this as a parameter</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>event mapping between world_id, event_id, and map_id</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetEventNames(System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Event Names
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetWorldNames(System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve World Name Information
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMapNames(System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Map Name information
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetEventDetails(System.Guid,System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Event Details
            </summary>
            <param name="event_id">(Optional) id of event to Retrieve. Use Guid.Empty to omit event_id and retrieve details for all events</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Collection of a single <seealso cref="T:GwApiNET.ResponseObjects.EventDetailsEntry"/> when event_id is null, otherwise a <seealso cref="T:GwApiNET.ResponseObjects.EntryCollection`1"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetEventDetails(System.String,System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Event Details
            </summary>
            <param name="event_id">(Optional) id of event to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Collection of a single <seealso cref="T:GwApiNET.ResponseObjects.EventDetailsEntry"/> when event_id is null, otherwise a <seealso cref="T:GwApiNET.ResponseObjects.EntryCollection`1"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetItemIds(System.Boolean)">
            <summary>
            Retrieve List of all Item IDs discovered by players
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Item IDs discovered by players</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetRecipeIds(System.Boolean)">
            <summary>
            Retrieve List of all Recipe IDs discovered by players
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Recipe IDs discovered by players</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetItemDetails(System.Int32,System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieves the details for a given item.
            </summary>
            <param name="item_id">(Required) - Item id</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>details for the given item id</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetRecipeDetails(System.Int32,System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Recipe information
            </summary>
            <param name="recipe_id">(Required) id of recipe to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Recipe information</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetGuildDetailsByName(System.String,System.Boolean)">
            <summary>
            Retrieve Guild Information for a given Guild Name
            </summary>
            <param name="guild_name">(Required) Name of guild to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Guild information</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetGuildDetailsById(System.String,System.Boolean)">
            <summary>
            Retrieve Guild Information for a given Guild ID
            </summary>
            <param name="guild_id">(Required) id of guild to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Guild information</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetGuildDetailsById(System.Guid,System.Boolean)">
            <summary>
            Retrieve Guild Information for a given Guild ID
            </summary>
            <param name="guild_id">(Required) id of guild to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Guild information</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMatches(System.Boolean)">
            <summary>
            Retrieve a list of Matches
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>List of <seealso cref="T:GwApiNET.ResponseObjects.MatchEntry"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMatchDetails(System.String,System.Boolean)">
            <summary>
            Retrieve Match Details
            </summary>
            <param name="match_id">(Required) id of the match to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns><seealso cref="T:GwApiNET.ResponseObjects.MatchDetailsEntry"/> containing information for a given match</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetObjectiveNames(System.Boolean,GwApiNET.Language)">
            <summary>
            Get WvW ObjectiveNames
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>ObjectiveNames</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetContinents(System.Boolean)">
            <summary>
            Retrieve a list of contintents.
            <remarks>Indexed by continent ID</remarks>
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMap(System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Map Entries
            <remarks>Indexed by Map ID</remarks>
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns><seealso cref="T:GwApiNET.ResponseObjects.EntryCollection`1"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMap(System.Int32,System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Map Entries
            <remarks>Indexed by Map ID</remarks>
            </summary>
            <param name="map_id">(Optional) Map id of the map entry to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns><seealso cref="T:GwApiNET.ResponseObjects.EntryCollection`1"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMapFloor(System.Int32,System.Int32,System.Boolean,GwApiNET.Language)">
            <summary>
            Map Floor information. Useful when using the world map tile service to display maps.
            </summary>
            <param name="continent_id">(Required) Continent to obtain info for</param>
            <param name="floor">(Required) floor of continent, check <seealso cref="T:GwApiNET.ResponseObjects.ContinentEntry"/> for a list of floors</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns><seealso cref="T:GwApiNET.ResponseObjects.MapFloorEntry"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetColors(System.Boolean,GwApiNET.Language)">
            <summary>
            Get Colors used for Guild Emblems
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Color Details</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetBuildNumber">
            <summary>
            Retrieve the current game build version
            </summary>
            <returns>game build version</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetFiles(System.Boolean)">
            <summary>
            Retrives a list of files that can be used with the Render Services api.
            Provides icons and images for maps, items, etc..
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetRenderServiceAssetEntry(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            The render service provides access to in-game assets like item icons.
            </summary>
            <param name="signature">(Required) File signature (Check <seealso cref="T:GwApiNET.ResponseObjects.ItemDetailsEntry"/> or <seealso cref="T:GwApiNET.ResponseObjects.FileEntry"/> for valid signatures)</param>
            <param name="file_id">(Required) File ID (Check <seealso cref="T:GwApiNET.ResponseObjects.ItemDetailsEntry"/> or <seealso cref="T:GwApiNET.ResponseObjects.FileEntry"/> for valid file id's)</param>
            <param name="format">(Required) Image format, Currently .png or .jpg</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetRenderServiceAssetEntry(GwApiNET.ResponseObjects.FileEntry,System.String,System.Boolean)">
            <summary>
            The render service provides access to in-game assets like item icons.
            </summary>
            <param name="file">(Required) File entry contining a signature and id</param>
            <param name="format">(Required) Image format, Currently .png or .jpg</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetEventNamesAsync(System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Event Names
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetWorldNamesAsync(System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve World Name Information
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMapNamesAsync(System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Map Name information
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetEventDetailsAsync(System.Guid,System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Event Details
            </summary>
            <param name="event_id">(Optional) id of event to Retrieve. Use Guid.Empty to omit event_id and retrieve details for all events</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Collection of a single <seealso cref="T:GwApiNET.ResponseObjects.EventDetailsEntry"/> when event_id is null, otherwise a <seealso cref="T:GwApiNET.ResponseObjects.EntryCollection`1"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetEventDetailsAsync(System.String,System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Event Details
            </summary>
            <param name="event_id">(Optional) id of event to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Collection of a single <seealso cref="T:GwApiNET.ResponseObjects.EventDetailsEntry"/> when event_id is null, otherwise a <seealso cref="T:GwApiNET.ResponseObjects.EntryCollection`1"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetRecipeIdsAsync(System.Boolean)">
            <summary>
            Retrieve List of all Recipe IDs discovered by players
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Recipe IDs discovered by players</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetItemDetailsAsync(System.Int32,System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieves the details for a given item.
            </summary>
            <param name="item_id">(Required) - Item id</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>details for the given item id</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetRecipeDetailsAsync(System.Int32,System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Recipe information
            </summary>
            <param name="recipe_id">(Required) id of recipe to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Recipe information</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetGuildDetailsByNameAsync(System.String,System.Boolean)">
            <summary>
            Retrieve Guild Information for a given Guild Name
            </summary>
            <param name="guild_name">(Required) Name of guild to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Guild information</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetGuildDetailsByIdAsync(System.String,System.Boolean)">
            <summary>
            Retrieve Guild Information for a given Guild ID
            </summary>
            <param name="guild_id">(Required) id of guild to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Guild information</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetGuildDetailsByIdAsync(System.Guid,System.Boolean)">
            <summary>
            Retrieve Guild Information for a given Guild ID
            </summary>
            <param name="guild_id">(Required) id of guild to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Guild information</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMatchesAsync(System.Boolean)">
            <summary>
            Retrieve a list of Matches
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>List of <seealso cref="T:GwApiNET.ResponseObjects.MatchEntry"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMatchDetailsAsync(System.String,System.Boolean)">
            <summary>
            Retrieve Match Details
            </summary>
            <param name="match_id">(Required) id of the match to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns><seealso cref="T:GwApiNET.ResponseObjects.MatchDetailsEntry"/> containing information for a given match</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetObjectiveNamesAsync(System.Boolean,GwApiNET.Language)">
            <summary>
            Get WvW ObjectiveNames
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>ObjectiveNames</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetContinentsAsync(System.Boolean)">
            <summary>
            Retrieve a list of contintents.
            <remarks>Indexed by continent ID</remarks>
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMapAsync(System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Map Entries
            <remarks>Indexed by Map ID</remarks>
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns><seealso cref="T:GwApiNET.ResponseObjects.EntryCollection`1"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMapAsync(System.Int32,System.Boolean,GwApiNET.Language)">
            <summary>
            Retrieve Map Entries
            <remarks>Indexed by Map ID</remarks>
            </summary>
            <param name="map_id">(Optional) Map id of the map entry to Retrieve</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns><seealso cref="T:GwApiNET.ResponseObjects.EntryCollection`1"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetMapFloorAsync(System.Int32,System.Int32,System.Boolean,GwApiNET.Language)">
            <summary>
            Map Floor information. Useful when using the world map tile service to display maps.
            </summary>
            <param name="continent_id">(Required) Continent to obtain info for</param>
            <param name="floor">(Required) floor of continent, check <seealso cref="T:GwApiNET.ResponseObjects.ContinentEntry"/> for a list of floors</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns><seealso cref="T:GwApiNET.ResponseObjects.MapFloorEntry"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetColorsAsync(System.Boolean,GwApiNET.Language)">
            <summary>
            Get Colors used for Guild Emblems
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>Color Details</returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetFilesAsync(System.Boolean)">
            <summary>
            Retrives a list of files that can be used with the Render Services api.
            Provides icons and images for maps, items, etc..
            </summary>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetRenderServiceAssetEntryAsync(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            The render service provides access to in-game assets like item icons.
            </summary>
            <param name="signature">(Required) File signature (Check <seealso cref="T:GwApiNET.ResponseObjects.ItemDetailsEntry"/> or <seealso cref="T:GwApiNET.ResponseObjects.FileEntry"/> for valid signatures)</param>
            <param name="file_id">(Required) File ID (Check <seealso cref="T:GwApiNET.ResponseObjects.ItemDetailsEntry"/> or <seealso cref="T:GwApiNET.ResponseObjects.FileEntry"/> for valid file id's)</param>
            <param name="format">(Required) Image format, Currently .png or .jpg</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.GetRenderServiceAssetEntryAsync(GwApiNET.ResponseObjects.FileEntry,System.String,System.Boolean)">
            <summary>
            The render service provides access to in-game assets like item icons.
            </summary>
            <param name="file">(Required) File entry contining a signature and id</param>
            <param name="format">(Required) Image format, Currently .png or .jpg</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwApi.HandleRequest``1(GwApiNET.IApiRequest,GwApiNET.IApiResponseParser{``0},System.Boolean)">
            <summary>
            Handles a request to the <see cref="T:GwApiNET.IApiResponseParser`1"/>.
            </summary>
            <param name="request">The <see cref="T:GwApiNET.IApiRequest"/>.</param>
            <param name="parser">The <see cref="T:GwApiNET.IApiResponseParser`1"/> which should be used to parse the response.</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>The appropriate (parsed) <see cref="T:GwApiNET.IApiRequest"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.HandleRequest``1(GwApiNET.IApiRequest,GwApiNET.IApiResponseParser{``0},GwApiNET.INetworkHandler,System.Boolean)">
            <summary>
            Handles a request to the <see cref="T:GwApiNET.IApiResponseParser`1"/>.
            </summary>
            <param name="request">The <see cref="T:GwApiNET.IApiRequest"/>.</param>
            <param name="parser">The <see cref="T:GwApiNET.IApiResponseParser`1"/> which should be used to parse the response.</param>
            <param name="network">The <see cref="T:GwApiNET.INetworkHandler"/> used for executing requests.</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>The appropriate (parsed) <see cref="T:GwApiNET.IApiRequest"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.HandleRequestAsync``1(GwApiNET.IApiRequest,GwApiNET.IApiResponseParserAsync{``0},System.Boolean)">
            <summary>
            Handles a request to the <see cref="T:GwApiNET.IApiResponseParser`1"/>.
            </summary>
            <param name="request">The <see cref="T:GwApiNET.IApiRequest"/>.</param>
            <param name="parser">The <see cref="T:GwApiNET.IApiResponseParser`1"/> which should be used to parse the response.</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>The appropriate (parsed) <see cref="T:GwApiNET.IApiRequest"/></returns>
        </member>
        <member name="M:GwApiNET.GwApi.HandleRequestAsync``1(GwApiNET.IApiRequest,GwApiNET.IApiResponseParserAsync{``0},GwApiNET.INetworkHandler,System.Boolean)">
            <summary>
            Handles a request to the <see cref="T:GwApiNET.IApiResponseParser`1"/>.
            </summary>
            <param name="request">The <see cref="T:GwApiNET.IApiRequest"/>.</param>
            <param name="parser">The <see cref="T:GwApiNET.IApiResponseParser`1"/> which should be used to parse the response.</param>
            <param name="network">The <see cref="T:GwApiNET.INetworkHandler"/> used for executing requests.</param>
            <param name="ignoreCache"><code>
            true: ignores cache and Retrieves the item details via the GW2 api.
            false: use cached data if it is available and not expired</code></param>
            <returns>The appropriate (parsed) <see cref="T:GwApiNET.IApiRequest"/></returns>
        </member>
        <member name="P:GwApiNET.GwApi.Build">
            <summary>
            GW2 Build Version.
            <remarks>This value is updated each time the library is initialized.</remarks>
            </summary>
        </member>
        <member name="T:GwApiNET.Gw2Point">
            <summary>
            Represents a coordinate in GW2.  Can be used as pixel coordinates or world/player coordinates.
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2Point.X">
            <summary>
            X Position
            </summary>
        </member>
        <member name="F:GwApiNET.Gw2Point.Y">
            <summary>
            Y Position
            </summary>
        </member>
        <member name="M:GwApiNET.Gw2Point.Equals(GwApiNET.Gw2Point)">
            <summary>
            Determines of given Gw2Point is equal to this point in values.
            </summary>
            <param name="other">point to compare to.</param>
            <returns>true if the X positions and Y positions are equal.  Due to 
            the X and Y values being double, an algorithm is used to determine equality.
            Currently the values would be considered equal at extremly high accuracy.</returns>
        </member>
        <member name="M:GwApiNET.Gw2Point.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GwApiNET.Gw2Point.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing a fully qualified type name.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GwApiNET.Gw2Point.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
            <param name="obj">Another object to compare to. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:GwApiNET.Gw2Point.op_Equality(GwApiNET.Gw2Point,GwApiNET.Gw2Point)">
            <summary>
            Determines if two Gw2Points are equal.
            </summary>
            <param name="left">left hand object</param>
            <param name="right">right hand object</param>
            <returns>true if the X positions and Y positions are equal.  Due to 
            the X and Y values being double, an algorithm is used to determine equality.
            Currently the values would be considered equal at extremly high accuracy.</returns>
        </member>
        <member name="M:GwApiNET.Gw2Point.op_Inequality(GwApiNET.Gw2Point,GwApiNET.Gw2Point)">
            <summary>
            Determines if two Gw2Points are not equal.
            </summary>
            <param name="left">left hand object</param>
            <param name="right">right hand object</param>
            <returns>true if the X positions and Y positions are not equal.  Due to 
            the X and Y values being double, an algorithm is used to determine equality.
            Currently the values would be considered equal at extremly high accuracy.</returns>
        </member>
        <member name="M:GwApiNET.Gw2Point.op_Multiply(GwApiNET.Gw2Point,System.Double)">
            <summary>
            Provides multiplication operator to the point using a scaler.
            </summary>
            <param name="point">value to multiply</param>
            <param name="scaler">scaler to multiply the X and Y value by.</param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.Gw2Point.op_Multiply(System.Double,GwApiNET.Gw2Point)">
            <summary>
            Provides multiplication operator to the point using a scaler.
            </summary>
            <param name="point">value to multiply</param>
            <param name="scaler">scaler to multiply the X and Y value by.</param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.Gw2Point.op_Division(GwApiNET.Gw2Point,System.Double)">
            <summary>
            Provides division operator to the point using a scaler.
            </summary>
            <param name="point">value to divide</param>
            <param name="scaler">scaler to divide the X and Y value by.</param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.Gw2Point.op_Subtraction(GwApiNET.Gw2Point,GwApiNET.Gw2Point)">
            <summary>
            Provides subtraction operator to the point using a scaler.
            </summary>
            <param name="left">left hand value</param>
            <param name="right">right hand value</param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.Gw2Point.op_Addition(GwApiNET.Gw2Point,GwApiNET.Gw2Point)">
            <summary>
            Provides addition operator to the point using a scaler.
            </summary>
            <param name="left">left hand value</param>
            <param name="right">right hand value</param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.GwMapsHelper.GetContinent(GwApiNET.ResponseObjects.MapEntryBase)">
            <summary>
            Returns the Continent for the given map
            </summary>
            <param name="map">map entry</param>
            <returns>Continent of the map supplied</returns>
        </member>
        <member name="M:GwApiNET.GwMapsHelper.GetContinent(System.Int32)">
            <summary>
            Returns the Continent for the given mapId
            </summary>
            <param name="mapId">map entry</param>
            <returns>Continent of the mapId supplied</returns>
        </member>
        <member name="M:GwApiNET.IApiResponseParserAsync`1.ParseAsync(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="F:GwApiNET.Constants.CacheFile">
            <summary>
            File path to Cached Responses
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.LoggerFileName">
            <summary>
            Log Filename.
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.LoggerNames">
            <summary>
            General Logger.
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.CurrentLanguage">
            <summary>
            Current default Language,  this added to api calls automatically.
            </summary>
        </member>
        <member name="M:GwApiNET.Constants.LoadConstants(System.String)">
            <summary>
            Load the constants from a file.
            Only constants listed in file are loaded, otherwise defaults are used.
            <remarks>Optional</remarks>
            </summary>
            <param name="file">file path</param>
        </member>
        <member name="M:GwApiNET.Constants.SaveConstants(System.String)">
            <summary>
            Save the constants form a file
            <remarks>Optional</remarks>
            </summary>
            <param name="file">file path</param>
        </member>
        <member name="F:GwApiNET.Constants.ApiBaseUrl">
            <summary>
            Base url for all API calls
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.events">
            <summary>
            events.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.event_names">
            <summary>
            event_names.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.map_names">
            <summary>
            map_names.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.world_names">
            <summary>
            world_names.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.event_details">
            <summary>
            event_details.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.wvw_matches">
            <summary>
            wvw/matches.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.wvw_match_details">
            <summary>
            wvw/match_details.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.wvw_objective_names">
            <summary>
            wvw/objective_names.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.items">
            <summary>
            items.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.item_details">
            <summary>
            item_details.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.recipes">
            <summary>
            recipes.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.recipe_details">
            <summary>
            recipe_details.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.guild_details">
            <summary>
            guild_details.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.continents">
            <summary>
            continents.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.maps">
            <summary>
            maps.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.map_floor">
            <summary>
            map_floor.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.build">
            <summary>
            build.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.colors">
            <summary>
            colors.json api url
            </summary>
        </member>
        <member name="F:GwApiNET.Constants.files">
            <summary>
            files.json api uri
            </summary>
        </member>
        <member name="M:GwApiNET.Extensions.GetDescription(System.Enum)">
            <summary>
            Retrieve the <see cref="T:GwApiNET.DescriptionAttribute"/> value
            </summary>
            <param name="value">The enum value to get the <see cref="T:GwApiNET.DescriptionAttribute"/> of</param>
            <returns><see cref="T:GwApiNET.DescriptionAttribute"/> value</returns>
        </member>
        <member name="T:GwApiNET.INetworkHandler">
            <summary>
            Handles network resources.  Retrieves remote objects using network resources.
            </summary>
        </member>
        <member name="M:GwApiNET.INetworkHandler.GetResponse(GwApiNET.IApiRequest)">
            <summary>
            Get the api response for the given request
            </summary>
            <param name="request">api request</param>
            <returns>an api resource</returns>
        </member>
        <member name="M:GwApiNET.INetworkHandler.GetResponse``1(GwApiNET.IApiRequest)">
            <summary>
            Retrives the object for the given request.
            </summary>
            <typeparam name="T">Type of requested object</typeparam>
            <param name="request">API Request object used to build the resource url</param>
            <returns>requested object of type T</returns>
        </member>
        <member name="P:GwApiNET.INetworkHandler.BaseUrl">
            <summary>
            The Base url to the api resources
            </summary>
        </member>
        <member name="T:GwApiNET.TestedAttribute">
            <summary>
            Used to track testing for classes, structs, and functions.
            <remarks>allows for auditing of a library to determine what has and hasn't been tested</remarks>
            </summary>
        </member>
        <member name="M:GwApiNET.TestedAttribute.#ctor(GwApiNET.TestedAttribute.TestStatus)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.TestedAttribute.#ctor(System.String,GwApiNET.TestedAttribute.TestStatus)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.TestedAttribute.#ctor(System.String,System.String,GwApiNET.TestedAttribute.TestStatus)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.TestedAttribute.TestReference">
            <summary>
            Name of the test function or test class for the associated object or function
            </summary>
        </member>
        <member name="P:GwApiNET.TestedAttribute.TestDescription">
            <summary>
            Description of Test or Description of what needs to be done
            </summary>
        </member>
        <member name="P:GwApiNET.TestedAttribute.Status">
            <summary>
            Status of Class, Struct or Function
            </summary>
        </member>
        <member name="T:GwApiNET.TestedAttribute.TestStatus">
            <summary>
            Test Status
            </summary>
        </member>
        <member name="F:GwApiNET.TestedAttribute.TestStatus.Tested">
            <summary>
            Unit Test has been written
            </summary>
        </member>
        <member name="F:GwApiNET.TestedAttribute.TestStatus.Untested">
            <summary>
            Unit Test has not been written/completed
            </summary>
        </member>
        <member name="F:GwApiNET.TestedAttribute.TestStatus.Ignored">
            <summary>
            Unit Testing is ignored (Not needed?)
            </summary>
        </member>
        <member name="F:GwApiNET.TestedAttribute.TestStatus.Undocumented">
            <summary>
            Used for Audit purposes,
            </summary>
        </member>
        <member name="M:GwApiNET.MathHelpers.HasMinimalDifference(System.Double,System.Double,System.Int32)">
            <summary>
            Compares two doubles and determines if they are equal based on the number of double deviations (<paramref name="units"/>) allowed.
            <remarks>
            <code>
            For Exmaple:
              double value1 = 0.1d;
              double value2 = 1.0999999999999999d;
              double value3 = 0.10000000000000003d;
            value2 is exactlly one possible double value from value1.  In otherwords there is no double value that can exists between value1 and value2. value2 is the next closest value greater than value1.
            value3 is exactlly two possible double values from value 1.  value2 is the only possible double representation between value1 and value3. value3 is the second closest value greater than value1.
            </code></remarks>
            </summary>
            <param name="value1">first value</param>
            <param name="value2">seconds value</param>
            <param name="units">number of possible double value deviations between <paramref name="value1"/> and <paramref name="value2"/></param>
            <returns>returns true if the number of possible double value deviations between <paramref name="value1"/> and <paramref name="value2"/> are less than or equal to <paramref name="units"/></returns>
        </member>
        <member name="T:GwApiNET.NetworkHandler">
            <summary>
            Handles basic GW2 object requests.
            </summary>
        </member>
        <member name="M:GwApiNET.NetworkHandler.BuildUri(GwApiNET.IApiRequest)">
            <summary>
            Build a full URI using the given IApiRequest
            </summary>
            <param name="request">request to build the full Uri with</param>
            <returns>fully qualified Uri</returns>
        </member>
        <member name="M:GwApiNET.NetworkHandler.#ctor(GwApiNET.Language,System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.NetworkHandler.GetResponse(GwApiNET.IApiRequest)">
            <summary>
            Retrives the object for the given request.
            </summary>
            <param name="request">API Request object used to build the resource url</param>
            <returns>requested object of type T</returns>
        </member>
        <member name="M:GwApiNET.NetworkHandler.GetResponse``1(GwApiNET.IApiRequest)">
            <summary>
            Retrives the object for the given request.
            </summary>
            <typeparam name="T">Type of requested object</typeparam>
            <param name="request">API Request object used to build the resource url</param>
            <returns>requested object of type T</returns>
        </member>
        <member name="M:GwApiNET.NetworkHandler.GetResponse(RestSharp.IRestRequest)">
            <summary>
            Retrives the object for the given request.
            </summary>
            <param name="request">API Request object used to build the resource url</param>
            <returns>requested object of type T</returns>
        </member>
        <member name="M:GwApiNET.NetworkHandler.BuildRequest(GwApiNET.IApiRequest)">
            <summary>
            Build an <seealso cref="T:RestSharp.IRestRequest"/> 
            </summary>
            <param name="request">API Request used to build an IRestRequest</param>
            <returns></returns>
        </member>
        <member name="P:GwApiNET.NetworkHandler.BaseUrl">
            <summary>
            Base/root url to remote objects.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseCache">
            <summary>
            Cache for saving GW2 API responses.
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseCache.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseCache.Add(System.String,GwApiNET.ResponseObjects.ResponseObject)">
            <summary>
            Add an object to the response cache
            </summary>
            <param name="url">full url used to obtain the response</param>
            <param name="response">the response to cache</param>
        </member>
        <member name="M:GwApiNET.ResponseCache.Add(GwApiNET.ResponseObjects.ResponseObject)">
            <summary>
            Add an object to the response cache
            </summary>
            <param name="response">the response to cache</param>
        </member>
        <member name="M:GwApiNET.ResponseCache.Get(System.String,System.Boolean)">
            <summary>
            Retrieve a ResponseObject object from cache.
            </summary>
            <param name="url">full url that would be used to retrieve the response from the GW2 API</param>
            <param name="ignore">ignore any values.  This will force a return of null.</param>
            <returns>null is returned if no object is found, <paramref name="ignore"/> = true, or the object has expired; otherwise the requested response object for the given url will be returned.</returns>
        </member>
        <member name="M:GwApiNET.ResponseCache.Clear">
            <summary>
            Clears the cache
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseCache.Purge">
            <summary>
            Purge the cache of all expired objects.
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseCache.Remove(System.String)">
            <summary>
            Remove object from cache with given url
            </summary>
            <param name="url">url or key to object</param>
        </member>
        <member name="M:GwApiNET.ResponseCache.GetHash(System.String)">
            <summary>
            Obtain a hash value for a given string.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GwApiNET.ResponseCache.Save">
            <summary>
            Saves the cache using the default cache file <seealso cref="F:GwApiNET.Constants.CacheFile"/>
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseCache.Save(System.String)">
            <summary>
            Saves the cache file to the given filename.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:GwApiNET.ResponseCache.Load(System.String)">
            <summary>
            Load a cache from the given file.
            if null is provided, then the <seealso cref="F:GwApiNET.Constants.CacheFile"/> will attempt to be loaded.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="P:GwApiNET.ResponseCache.Cache">
            <summary>
            Cache
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseException">
            <summary>
            Response error for GW2 responses
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseException.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseException.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.FileEntryParser">
            <summary>
            Parser for the <seealso cref="F:GwApiNET.Constants.files"/> api response
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.FileEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.FileEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns></returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.NullParser`1">
            <summary>
            Null Parser.  Does not perform any parsing, instead will return the default value of type T.
            </summary>
            <typeparam name="T">return type</typeparam>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.NullParser`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.NullParser`1.Parse(System.Object)">
            <summary>
            Parses the response object.
            <remarks>Does not actually parse.</remarks>
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>default(T)</returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.RenderServiceAssetParser">
            <summary>
            Parser for Render Services api.
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.RenderServiceAssetParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.RenderServiceAssetParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.RenderServiceAssetEntry">
            <summary>
            Entry for render services api.
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.RenderServiceAssetEntry.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RenderServiceAssetEntry.Asset">
            <summary>
            Retrieved Asset
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RenderServiceAssetEntry.File">
            <summary>
            File information of the asset.  Used to retrieve the file.
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.ColorEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ContinentEntry">
            <summary>
            Entry for continents.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.ContinentEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ContinentEntry.Id">
            <summary>
            ID of continent
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ContinentEntry.Name">
            <summary>
            Name of continent
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ContinentEntry.Dimension">
            <summary>
            Pixel dimensions of continent
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ContinentEntry.MinZoom">
            <summary>
            Minimum zoom level.  Used with world tile services to determine what tiles are available at a given resolution for the continent.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ContinentEntry.MaxZoom">
            <summary>
            Maximum zoom level.  Used with world tile services to determine what tiles are available at a given resolution for the continent.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ContinentEntry.Floors">
            <summary>
            List of floors on the continent.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.EventDetailsEntry">
            <summary>
            Entry for event_details.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.EventDetailsEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventDetailsEntry.EventId">
            <summary>
            Event ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventDetailsEntry.Name">
            <summary>
            Name of Event
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventDetailsEntry.Level">
            <summary>
            Event Level
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventDetailsEntry.MapId">
            <summary>
            ID of the map the event is on.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventDetailsEntry.Flags">
            <summary>
            Event flags.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventDetailsEntry.Location">
            <summary>
            Event Location
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.EventLocation">
            <summary>
            Event Location information
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventLocation.Type">
            <summary>
            Location Type
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventLocation.Center">
            <summary>
            Center of event coordinates
            <remarks>Uses world/player coordinates.  This can be translated to pixel coordinates using <seealso cref="T:GwApiNET.GwMapsHelper"/>.  Use the MapID to determine the MapRectangle boundries the event is on.</remarks>
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventLocation.Radius">
            <summary>
            Radius of event using world coordinates
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventLocation.Rotation">
            <summary>
            Rotation
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventLocation.Points">
            <summary>
            Event Points
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventLocation.ZRange">
            <summary>
            Z-Range
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.EventLocation.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.EventLocationType">
            <summary>
            Event Location Type.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.EventLocationType.Sphere">
            <summary>
            Event boundries form a sphere
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.EventLocationType.Poly">
            <summary>
            Event boundries form a polygon
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.EventLocationType.Cylinder">
            <summary>
            event boundries form a cylinder
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.EventEntry">
            <summary>
            Event Entry
            <remarks>Provides mapping between world_id, map_id, event_id and the <seealso cref="T:GwApiNET.EventState"/></remarks>
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.EventEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.EventNameEntry">
            <summary>
            Entry for event_names.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.EventNameEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.FileEntry">
            <summary>
            Entry for files.json.
            File Entry used for render services.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.FileEntry.FileID">
            <summary>
            File ID used to retrieve the file from GW2.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.FileEntry.Signature">
            <summary>
            File Signature used to retrieve the file from GW2.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.GuildDetailsEntry">
            <summary>
            Entry for guild_details.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.GuildDetailsEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.GuildDetailsEntry.GuildId">
            <summary>
            Guild ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.GuildDetailsEntry.GuildName">
            <summary>
            Guild Name
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.GuildDetailsEntry.Tag">
            <summary>
            Guild TAG
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.GuildDetailsEntry.Emblem">
            <summary>
            Guild Emblem
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.GuildDetailsEntry.EmblemProperties">
            <summary>
            Guild Emblem properties
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.GuildDetailsEntry.EmblemProperties.BackgroundId">
            <summary>
            Background ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.GuildDetailsEntry.EmblemProperties.ForegroundId">
            <summary>
            Foreground id
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.GuildDetailsEntry.EmblemProperties.Flags">
            <summary>
            flags
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.GuildDetailsEntry.EmblemProperties.BackgroundColorId">
            <summary>
            Background color id.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.GuildDetailsEntry.EmblemProperties.ForegroundPrimaryColorId">
            <summary>
            Foreground primary color id.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.GuildDetailsEntry.EmblemProperties.ForegroundSecondaryColorId">
            <summary>
            Foreground secondary color id.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.IdList">
            <summary>
            Used as a list of IDs.  A simple IList{int} of ids.
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="initialSize">initial list size</param>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Initial collection to add to list</param>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.Add(System.Int32)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.Contains(System.Int32)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.CopyTo(System.Int32[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception><exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.Remove(System.Int32)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.IndexOf(System.Int32)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param><param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:GwApiNET.ResponseObjects.IdList.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:GwApiNET.ResponseObjects.IdList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:GwApiNET.ResponseObjects.IdList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:GwApiNET.ResponseObjects.IdList.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:GwApiNET.ResponseObjects.ItemDetailsEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.Type">
            <summary>
            typeDeals 
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.SuffixId">
            <summary>
            Item suffix id
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.MinPower">
            <summary>
            minimum powerDeals 
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.MaxPower">
            <summary>
            maximum powerDeals 
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.InfusionSlots">
            <summary>
            infusion slotsDeals 
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.InfixUpgrade">
            <summary>
            infix upgradeDeals 
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.Defense">
            <summary>
            defenseDeals 
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.DamageType">
            <summary>
            damage typeDeals 
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType">
            <summary>
            Weapon Types
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.LongBow">
            <summary>
            long bow
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Pistol">
            <summary>
            pistol
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Warhorn">
            <summary>
            warhorn
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Sword">
            <summary>
            sword
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Staff">
            <summary>
            staff
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Hammer">
            <summary>
            hammer
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Trident">
            <summary>
            trident
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Scepter">
            <summary>
            scepter
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Speargun">
            <summary>
            speargun
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Mace">
            <summary>
            mace
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Axe">
            <summary>
            axe
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Torch">
            <summary>
            torch
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Dagger">
            <summary>
            dagger
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Shield">
            <summary>
            shield
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Harpoon">
            <summary>
            harpoon
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Greatsword">
            <summary>
            greatsword
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Rifle">
            <summary>
            rifle
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Focus">
            <summary>
            focus
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.ShortBow">
            <summary>
            short bow
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.Toy">
            <summary>
            toy
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.TwoHandedToy">
            <summary>
            two handed toy
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponType.LargeBundle">
            <summary>
            large bundle
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponDamageType">
            <summary>
            Weapon Damage Types.
            <remarks>The type of damage a weapon deals</remarks>
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponDamageType.Physical">
            <summary>
            Deals physical damage.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponDamageType.Fire">
            <summary>
            Deals fire damage.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponDamageType.Ice">
            <summary>
            Deals ice damage.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.WeaponInfo.WeaponDamageType.Lightning">
            <summary>
            Deals lightning damage.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.Type">
            <summary>
            upgrade type.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.Suffix">
            <summary>
            suffix.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.InfusionUpgradeType">
            <summary>
            infusion upgrade type.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.InfixUpgrade">
            <summary>
            infix upgrade.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.Flags">
            <summary>
            flags.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType">
            <summary>
            upgrade component flags.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.HeavyArmor">
            <summary>
            heavy armor type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.MediumArmor">
            <summary>
            medium armor type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.LightArmor">
            <summary>
            light armor type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Axe">
            <summary>
             axe type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Dagger">
            <summary>
            dagger type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Focus">
            <summary>
            focus type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Greatsword">
            <summary>
            greatsword type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Hammer">
            <summary>
            hammer type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Harpoon">
            <summary>
            harpoon type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.LongBow">
            <summary>
            long bow type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Mace">
            <summary>
            mace type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Pistol">
            <summary>
            pistol type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Rifle">
            <summary>
            rifle type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Scepter">
            <summary>
            scepter type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Shield">
            <summary>
            shield type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.ShortBow">
            <summary>
            short bow type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Speargun">
            <summary>
            speargun type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Staff">
            <summary>
            staff type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Sword">
            <summary>
            sword type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Torch">
            <summary>
            torch type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Trident">
            <summary>
            trident type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Trinket">
            <summary>
            trinket type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeComponentType.Warhorn">
            <summary>
            warhorn type
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeType">
            <summary>
            Possible Upgrade Types
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeType.Rune">
            <summary>
            rune upgrade
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeType.Default">
            <summary>
            Default upgrade
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeType.Sigil">
            <summary>
            sigil upgrade
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.UpgradeComponentInfo.UpgradeType.Gem">
            <summary>
            gem upgrade
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.TrinketInfo.Type">
            <summary>
            Trinket type
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.TrinketInfo.SuffixId">
            <summary>
            Item suffix id
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.TrinketInfo.InfusionSlots">
            <summary>
            infusion slots.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.TrinketInfo.InfixUpgrade">
            <summary>
            infix upgrade.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.TrinketInfo.TrinketType">
            <summary>
            Trinket Types
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.TrinketInfo.TrinketType.Ring">
            <summary>
            Ring
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.TrinketInfo.TrinketType.Accessory">
            <summary>
            Accessory
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.TrinketInfo.TrinketType.Amulet">
            <summary>
            Amulet
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.ToolInfo.Type">
            <summary>
            Tool Type
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.ToolInfo.Charges">
            <summary>
            Number of charges
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.ToolInfo.ToolType">
            <summary>
            Tool Types
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ToolInfo.ToolType.Salvage">
            <summary>
            A salvage tool.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ToolInfo.ToolType.Logging">
            <summary>
            A logging tool.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ToolInfo.ToolType.Foraging">
            <summary>
            A foraging tool.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ToolInfo.ToolType.Mining">
            <summary>
            A mining tool.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.GizmoInfo.Type">
            <summary>
            Gizmo Type.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.GizmoInfo.GizmoType">
            <summary>
            Gizmo Types
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.GizmoInfo.GizmoType.Default">
            <summary>
            Default gizmo.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.GizmoInfo.GizmoType.RentableContractNpc">
            <summary>
            A rentable contract npc.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.GizmoInfo.GizmoType.UnlimitedConsumable">
            <summary>
            An unlimited consumable.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.ContainerInfo.Type">
            <summary>
            Container Type
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.ContainerInfo.ContainerType">
            <summary>
            Container Type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ContainerInfo.ContainerType.Default">
            <summary>
            A default container.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ContainerInfo.ContainerType.GiftBox">
            <summary>
            A gift box.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.Type">
            <summary>
            Consumable type.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType">
            <summary>
            Consumable type
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType.Unlock">
            <summary>
            unlocks stuff
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType.AppearanceChange">
            <summary>
            changes appearance
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType.ContractNpc">
            <summary>
            summons a contract npc.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType.Food">
            <summary>
            food consumable.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType.Booze">
            <summary>
            alcoholic beverage.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType.Generic">
            <summary>
            generic consumable.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType.Halloween">
            <summary>
            halloween consumable.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType.Immediate">
            <summary>
            immediate consumable.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType.Transmutation">
            <summary>
            transmutate items.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType.Utility">
            <summary>
            utility consumable.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ConsumableInfo.ConsumableType.Unknown">
            <summary>
            Unknown Consumable
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.BagInfo.Size">
            <summary>
            bag size.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.BagInfo.NoSellOrSort">
            <summary>
            Identifies if the bag can be sold.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.BackInfo.SuffixId">
            <summary>
            Item suffix id
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.BackInfo.InfusionSlots">
            <summary>
            infusion slots.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.BackInfo.InfixUpgrade">
            <summary>
            infix upgrade.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.Class">
            <summary>
            Armour class
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.Type">
            <summary>
            Armour type
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.SuffixId">
            <summary>
            Item suffix id
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.InfusionSlots">
            <summary>
            Infusion slots.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.InfixUpgrade">
            <summary>
            Infix upgrade.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.Defense">
            <summary>
            Defense.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourType">
            <summary>
            The stot the armor belongs to.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourType.Boots">
            <summary>
            boots slot
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourType.Helm">
            <summary>
            helm slot
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourType.Leggings">
            <summary>
            leggings slot
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourType.Gloves">
            <summary>
            gloves slot
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourType.Shoulders">
            <summary>
            shoulders slot
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourType.Coat">
            <summary>
            coat slot
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourType.HelmAquatic">
            <summary>
            aquatic helmet slot
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourClass">
            <summary>
            Specifies armour class.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourClass.Clothing">
            <summary>
            Clothing.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourClass.Light">
            <summary>
            Light armour.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourClass.Medium">
            <summary>
            Medium armour.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.ArmorInfo.ArmourClass.Heavy">
            <summary>
            eavy armour.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.InfusionSlotInfo.Item">
            <summary>
            item.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.InfusionSlotInfo.Flags">
            <summary>
            item flags.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.InfusionSlotInfo.UpgradeType">
            <summary>
            Type of upgrade
            <remarks>InfusionSlotInfo flag</remarks>
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.InfusionSlotInfo.UpgradeType.Defense">
            <summary>
            Defense item.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.InfusionSlotInfo.UpgradeType.Offense">
            <summary>
            Offense item.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.InfusionSlotInfo.UpgradeType.Utility">
            <summary>
            Utility item.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.Attributes">
            <summary>
            attributes
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.Buff">
            <summary>
            buff
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.ItemAttribute">
            <summary>
            item attribute
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.ItemAttribute.Attribute">
            <summary>
            attribute.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.ItemAttribute.Modifier">
            <summary>
            modifier.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.ItemAttribute.ModifiedAttribute">
            <summary>
            Possible Item Attributes that can be modified
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.ItemAttribute.ModifiedAttribute.CritDamage">
            <summary>
            Critical damage.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.ItemAttribute.ModifiedAttribute.ConditionDamage">
            <summary>
            Condition damage.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.ItemAttribute.ModifiedAttribute.Healing">
            <summary>
            Healing.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.ItemAttribute.ModifiedAttribute.Vitality">
            <summary>
            Vitality.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.ItemAttribute.ModifiedAttribute.Power">
            <summary>
            Power.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.ItemAttribute.ModifiedAttribute.Toughness">
            <summary>
            Toughness.
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.InfixUpgradeInfo.ItemAttribute.ModifiedAttribute.Precision">
            <summary>
            Precision.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ItemDetailsEntry.GatheringInfo.Type">
            <summary>
            The gathering type
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ItemDetailsEntry.GatheringInfo.GatheringType">
            <summary>
            Gathering Types
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.GatheringInfo.GatheringType.Logging">
            <summary>
            used for logging
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.GatheringInfo.GatheringType.Mining">
            <summary>
            used for mining
            </summary>
        </member>
        <member name="F:GwApiNET.ResponseObjects.ItemDetailsEntry.GatheringInfo.GatheringType.Foraging">
            <summary>
            used for Foraging
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.MapEntry">
            <summary>
            Entry for maps.json
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.MapEntryBase">
            <summary>
            Base class for Map Entries.
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.MapEntryBase.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapEntryBase.Id">
            <summary>
            Map ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapEntryBase.MapName">
            <summary>
            Map Name
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapEntryBase.MinLevel">
            <summary>
            Minimum Map Level.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapEntryBase.MaxLevel">
            <summary>
            Maximum map level
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapEntryBase.DefaultFloor">
            <summary>
            Default floor for the map.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapEntryBase.RegionId">
            <summary>
            ID of the region the map is in
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapEntryBase.RegionName">
            <summary>
            Name of the region the map is in.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapEntryBase.MapRectangle">
            <summary>
            Map boundries.
            <remarks>These boundries build a rectangle and provides a way to project a players position to pixel values on the continent.
            A maps coordinate system assumes the origin (0,0) of the map is near the center of the map.
            See <seealso cref="T:GwApiNET.GwMapsHelper"/> for functions on converting a players position to pixel coordinates for a particular map.</remarks>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:GwApiNET.ResponseObjects.MapEntryBase.ContinentRectangle" -->
        <member name="M:GwApiNET.ResponseObjects.MapEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapEntry.Floors">
            <summary>
            List of Floors for the map
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapEntry.ContinentId">
            <summary>
            Continent ID the map is on
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapEntry.ContinentName">
            <summary>
            Continent name the map is on.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.MapFloorEntry">
            <summary>
            Entry for map_floor.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.MapFloorEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapFloorEntry.TextureDimensions">
            <summary>
            Texture dimensions in pixels for the floor of a map.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapFloorEntry.Regions">
            <summary>
            Regions on the map.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapFloorEntry.ClampedView">
            <summary>
            Clamped view of the floor
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.RegionEntry">
            <summary>
            Map Floor Region
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RegionEntry.Id">
            <summary>
            Region ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RegionEntry.Name">
            <summary>
            Name of the region.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RegionEntry.LabelCoord">
            <summary>
            Coordinate of the label (Name of the region).
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RegionEntry.Maps">
            <summary>
            Maps of the region
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.RegionMap">
            <summary>
            Map of a region
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RegionMap.Name">
            <summary>
            Name of the map.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RegionMap.PointsOfInterest">
            <summary>
            Points of Interest on the map.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RegionMap.Tasks">
            <summary>
            Tasks on the map.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RegionMap.SkillChallenges">
            <summary>
            Skill Challenges for hte map.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RegionMap.Sectors">
            <summary>
            Sectors of the map.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.SectorEntry">
            <summary>
            Map Sector information
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.SectorEntry.Id">
            <summary>
            Sector ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.SectorEntry.Name">
            <summary>
            Sector Name
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.SectorEntry.Level">
            <summary>
            Sector Level
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.SectorEntry.Coordinates">
            <summary>
            Sector Coordinates
            </summary>
            <remarks>pixel values</remarks>
        </member>
        <member name="T:GwApiNET.ResponseObjects.SkillChallengeEntry">
            <summary>
            Skill Challenge Information
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.SkillChallengeEntry.Coordinents">
            <summary>
            Skill Challenge Location
            </summary>
            <remarks>pixel values</remarks>
        </member>
        <member name="T:GwApiNET.ResponseObjects.TaskEntry">
            <summary>
            Map Task Entry
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.TaskEntry.Id">
            <summary>
            Task ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.TaskEntry.Objective">
            <summary>
            Task Objective
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.TaskEntry.Level">
            <summary>
            Task Level
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.TaskEntry.Coordinates">
            <summary>
            Task Location
            </summary>
            <remarks>pixel values</remarks>
        </member>
        <member name="T:GwApiNET.ResponseObjects.PointOfInterest">
            <summary>
            Map Point of Interest
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.PointOfInterest.Id">
            <summary>
            Point of Interest ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.PointOfInterest.Name">
            <summary>
            Point of Interest Name
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.PointOfInterest.Type">
            <summary>
            Type of Point of Interest
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.PointOfInterest.Floor">
            <summary>
            Floor location
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.PointOfInterest.Coordinates">
            <summary>
            Point of Interest Location
            <remarks>pixel values</remarks>
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.MapNameEntry">
            <summary>
            Entry for map_names.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.MapNameEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapNameEntry.Id">
            <summary>
            ID of map
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MapNameEntry.Name">
            <summary>
            Name of map.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.MatchDetailsEntry">
            <summary>
            Entry for match_details.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.MatchDetailsEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchDetailsEntry.Id">
            <summary>
            ID of the match
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchDetailsEntry.Scores">
            <summary>
            current scores
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchDetailsEntry.RedScore">
            <summary>
            Red World Score
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchDetailsEntry.BlueScore">
            <summary>
            Blue World Score
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchDetailsEntry.GreenScore">
            <summary>
            Green World Score
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchDetailsEntry.Maps">
            <summary>
            Maps
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchMap.RedScore">
            <summary>
            Red World Score
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchMap.BlueScore">
            <summary>
            Blue World Score
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchMap.GreenScore">
            <summary>
            Green World Score
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.MatchEntry">
            <summary>
            Match entry in matches.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.MatchEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchEntry.Id">
            <summary>
            ID of match
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchEntry.RedWorldId">
            <summary>
            Red Team World ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchEntry.BlueWorldId">
            <summary>
            Blue Team world ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchEntry.GreenWorldId">
            <summary>
            Green Team world ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchEntry.StartTime">
            <summary>
            Starting Time of the match.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.MatchEntry.EndTime">
            <summary>
            Ending time of the match.
            <remarks>This may be in the future if the match has not yet ended.</remarks>
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.ObjectiveNameEntry">
            <summary>
            entry in objective_names.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.ObjectiveNameEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ObjectiveNameEntry.Id">
            <summary>
            Objective ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.ObjectiveNameEntry.Name">
            <summary>
            Objective Name
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.ColorEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.ContinentEntryParser">
            <summary>
            Parser for continents.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.ContinentEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.ContinentEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.EventDetailsEntryParser">
            <summary>
            Parser for event_details.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.EventDetailsEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.EventDetailsEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.EventEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.EventEntryParser.Parse(System.Object)">
            <summary>
            Parse a json string containing an array of <seealso cref="T:GwApiNET.ResponseObjects.EventEntry"/> 
            </summary>
            <param name="apiResponse">json string containing an array</param>
            <returns>Collection of EventEntry objects</returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.EventNameEntryParser">
            <summary>
            Parser for event_names.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.EventNameEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.EventNameEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.GuildDetailsEntryParser">
            <summary>
            Parser for guild_details.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.GuildDetailsEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.GuildDetailsEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.ItemDetailsEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.ItemIdListParser">
            <summary>
            Praser for items.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.ItemIdListParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.ItemIdListParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.MapEntryParser">
            <summary>
            Parser for maps.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.MapEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.MapEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.MapFloorEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.MapFloorEntryParser.CopyPropertiesFrom(System.Object,System.Object,System.String[])">
            <summary>
            Copies the readable and writable public property values from the source object to the target
            </summary>
            <remarks>The source and target objects must be of the same type.</remarks>
            <param name="target">The target object</param>
            <param name="source">The source object</param>
            <param name="ignoreProperties">An array of property names to ignore</param>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.MapNameEntryParser">
            <summary>
            Parser for map_names.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.MapNameEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.MapNameEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.MatchDetailsEntryParser">
            <summary>
            Parser for match_details.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.MatchDetailsEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.MatchDetailsEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.MatchEntryParser">
            <summary>
            Parse match_entry.json response object
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.MatchEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.MatchEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.ObjectiveNameEntryParser">
            <summary>
            Parse objective_name.json response object
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.ObjectiveNameEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.ObjectiveNameEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.RecipeDetailsEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.RecipeIdListParser">
            <summary>
            Parse recipes.json response object
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.RecipeIdListParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.RecipeIdListParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.Parsers.WorldNameEntryParser">
            <summary>
            Parse World Name information.
            <remarks>world_name.json parser</remarks>
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.WorldNameEntryParser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.Parsers.WorldNameEntryParser.Parse(System.Object)">
            <summary>
            Parses the response object.
            </summary>
            <param name="apiResponse">raw response from the GW2 Server</param>
            <returns>Parsed object</returns>
        </member>
        <member name="T:GwApiNET.ResponseObjects.RecipeDetailsEntry">
            <summary>
            Entry in recipe_details.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.RecipeDetailsEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RecipeDetailsEntry.RecipeId">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RecipeDetailsEntry.RecipeType">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RecipeDetailsEntry.OuputItemId">
            <summary>
            Output result Item ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RecipeDetailsEntry.OutputCount">
            <summary>
            Number of output items
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RecipeDetailsEntry.MinRating">
            <summary>
            Minimum rating needed to craft the item.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RecipeDetailsEntry.TimeToCraftMsec">
            <summary>
            Time to craft the item in milliseconds
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RecipeDetailsEntry.Diciplines">
            <summary>
            Crafting Discipline
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RecipeDetailsEntry.Flags">
            <summary>
            Recipe flags
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RecipeDetailsEntry.Ingredients">
            <summary>
            Input ingredients needed to make the recipe.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.RecipeIngredient">
            <summary>
            Recipe Ingredient for recipe_details.json
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.RecipeIngredient.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RecipeIngredient.ItemId">
            <summary>
            Item ID of input item.
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.RecipeIngredient.Count">
            <summary>
            Number of items required.
            </summary>
        </member>
        <member name="T:GwApiNET.ResponseObjects.WorldNameEntry">
            <summary>
            World Name entry for world_names.json object
            </summary>
        </member>
        <member name="M:GwApiNET.ResponseObjects.WorldNameEntry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.WorldNameEntry.Id">
            <summary>
            World ID
            </summary>
        </member>
        <member name="P:GwApiNET.ResponseObjects.WorldNameEntry.Name">
            <summary>
            World Name
            </summary>
        </member>
        <member name="T:GwApiNET.XmlUtilities">
            <summary>
            Provides common XML functions
            </summary>
        </member>
        <member name="M:GwApiNET.XmlUtilities.XmlSerialize``1(``0,System.Type[])">
            <summary>
            Serialize object of type T into an xml string
            </summary>
            <typeparam name="T">type of <paramref name="item"/></typeparam>
            <param name="item">item to serialize</param>
            <param name="extraTypes">A <see cref="T:System.Type"/> array of additional object types to serialize.</param>
            <returns>xml string representation of <paramref name="item"/></returns>
        </member>
        <member name="M:GwApiNET.XmlUtilities.XmlSerialize(System.Object)">
            <summary>
            Serialize object to an xml string
            </summary>
            <param name="item">item to serialize</param>
            <returns>xml string representation of <paramref name="item"/></returns>
        </member>
        <member name="M:GwApiNET.XmlUtilities.XmlDeserialize``1(System.String)">
            <summary>
            Deserialize an xml string into an object
            <remarks>This function is the inverse of <see cref="M:GwApiNET.XmlUtilities.XmlSerialize(System.Object)"/></remarks>
            </summary>
            <typeparam name="T"><see cref="T:System.Type"/> of object to return</typeparam>
            <param name="xml">xml data serialized via <see cref="T:System.Xml.Serialization.XmlSerializer"/></param>
            <returns>Deserialized object of type T</returns>
        </member>
        <member name="M:GwApiNET.XmlUtilities.XmlDeserialize(System.String,System.Type)">
            <summary>
            Deserialize an xml string into an object
            <remarks>This function is the inverse of <see cref="M:GwApiNET.XmlUtilities.XmlSerialize(System.Object)"/></remarks>
            </summary>
            <param name="xml">xml data serialized via <see cref="T:System.Xml.Serialization.XmlSerializer"/></param>
            <param name="type">object type being deserialized</param>
            <returns>Deserialized object of <paramref name="type"/></returns>
        </member>
    </members>
</doc>
